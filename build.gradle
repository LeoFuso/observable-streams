plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

group 'io.github.leofuso'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    implementation libs.kafka.streams
    implementation libs.micrometer.observation
    implementation libs.bytebuddy
    implementation libs.slf4j.api

    testImplementation libs.jupiter.api
    testRuntimeOnly libs.jupiter.engine
    testRuntimeOnly libs.slf4j.engine
}

compileJava {
    options.compilerArgs << '-parameters'
    inputs.files(tasks.named('processResources'))
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        sonatype(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = group + ':observable-streams'
                description = 'Micrometer extension for Kafka Streams instrumentation using ByteBuddy'
                url = 'https://github.com/leofuso/observable-streams'
                packaging 'jar'
                issueManagement {
                    system = 'GitHub Issue Tracking'
                    url = 'https://github.com/leofuso/observable-streams/issues'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'leofuso'
                        name = 'Leonardo Fuso Nuzzo'
                        email = 'leonardofusonuzzo@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/leofuso/observable-streams.git'
                    developerConnection = 'scm:git:git@github.com:leofuso/observable-streams.git'
                    url = 'https://github.com/LeoFuso/observable-streams'
                }
            }
        }
    }
    repositories {
        var isSnapshot = version.endsWith('SNAPSHOT')
        if (isSnapshot) {
            maven {
                url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                name = 'SonatypeSnapshot'
                credentials(PasswordCredentials.class)
            }
        } else {
            maven {
                url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                name = 'SonatypeRelease'
                credentials(PasswordCredentials.class)
            }
        }
    }
}

/*
 * Commented out for JitPack's automation, necessary for Sonatype releases.
 *
 * signing { sign publishing.publications }
*/

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri('https://s01.oss.sonatype.org/service/local/')
            snapshotRepositoryUrl = uri('https://s01.oss.sonatype.org/content/repositories/snapshots/')
            username = SonatypeReleaseUsername
            password = SonatypeReleasePassword
        }
    }
}
